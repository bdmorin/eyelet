name: Validate Published Package

on:
  release:
    types: [published]

jobs:
  validate-pypi:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]
    
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Wait for PyPI to update
      run: sleep 120  # Wait 2 minutes for PyPI to propagate
    
    - name: Install from PyPI with pipx
      run: |
        python -m pip install pipx
        pipx install rigging-cli
    
    - name: Test basic functionality
      run: |
        rigging --version
        rigging --help
        rigging validate --help
        rigging configure --help
    
    - name: Test with uvx
      run: |
        python -m pip install uv
        uvx --from rigging-cli rigging --version
        uvx --from rigging-cli rigging validate --help
      if: matrix.os != 'windows-latest'  # uvx may have issues on Windows
    
    - name: Create test settings and validate
      run: |
        mkdir -p test-project/.claude
        cat > test-project/.claude/settings.json << 'EOF'
        {
          "hooks": [
            {
              "type": "PreToolUse",
              "handler": {
                "type": "command", 
                "command": "echo test"
              },
              "matcher": ".*"
            }
          ]
        }
        EOF
        cd test-project
        rigging validate settings .claude/settings.json
      shell: bash
    
    - name: Test completion installation
      run: |
        rigging completion --help
      continue-on-error: true